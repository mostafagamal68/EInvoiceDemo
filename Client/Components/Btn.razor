<button @ref="Element" class="btn rounded-3 mx-1 border-0 shadow-none @Classes" @onclick="@RunAction" disabled="@IsActionRun" type="@Type" @attributes="AdditionalAttributes">
    @SpanIcon
    @Text
    @if (IsActionRun)
    {
        <span class="spinner-grow spinner-grow-sm mx-1" role="status"></span>
    }
</button>

@code {
    [Parameter]
    public string Text { get; set; } = "";
    [Parameter]
    public string Classes { get; set; } = "";
    [Parameter]
    public string Type { get; set; } = "button";
    [Parameter]
    public EventCallback ClickAction { get; set; }
    [Parameter]
    public RenderFragment? SpanIcon { get; set; }
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? AdditionalAttributes { get; set; }
    [Parameter]
    public bool ValidateEditContext { get; set; } = true;
    [CascadingParameter]
    public EditContext? EditContext { get; set; }

    private bool IsActionRun = false;
    private ElementReference Element;

    public async Task RunAction()
    {
        if (EditContext == null || !ValidateEditContext || EditContext.Validate())
        {
            IsActionRun = true;
            try
            {
                await ClickAction.InvokeAsync();
            }
            finally
            {
                IsActionRun = false;
            }
        }
    }
}