<div>
    <ul class="pagination pagination-sm justify-content-end">
        <li class="page-item @(Pagination.PageNo == 0 ? "disabled" : "")">
            <a role="button" class="page-link" @onclick="@(() => Get(0))">First</a>
        </li>
        <li class="page-item @(Pagination.PageNo == 0 ? "disabled" : "")">
            <a role="button" class="page-link" @onclick="@(() => Get(Pagination.CurrentPage-1))">Previous</a>
        </li>
        @foreach (int page in Enumerable.Range(Pagination.StartPage, Pagination.PagesCount - Pagination.StartPage > 9 ? Pagination.StartPage + 9 : Pagination.PagesCount - Pagination.StartPage + 1))
        {
            <li class="page-item @($"{(page-1 == Pagination.CurrentPage ? "active-page" : "")}")">
                <a role="button" class="page-link" @onclick="@(() => Get(page-1))">@(page)</a>
            </li>
        }
        <li class="page-item @(Pagination.PageNo == Pagination.PagesCount - 1 ? "disabled" : "")">
            <a role="button" class="page-link" @onclick="@(() => Get(Pagination.CurrentPage+1))">Next</a>
        </li>
        <li class="page-item @(Pagination.PageNo == Pagination.PagesCount - 1 ? "disabled" : "")">
            <a role="button" class="page-link" @onclick="@(() => Get(Pagination.PagesCount-1))">Last</a>
        </li>
        <li>
            <select class="form-select form-select-sm shadow-none" value="@Pagination.RowsCount" @onchange="RowsChanged">
                <option value="1">1</option>
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="25">25</option>
                <option value="50">50</option>
                <option value="100">100</option>
                <option value="200">200</option>
            </select>
        </li>
    </ul>
</div>

@code {
    [Parameter]
    public Pagination Pagination { get; set; } = new();

    [Parameter]
    public EventCallback GetPage { get; set; }

    private async Task Get(int page)
    {
        Pagination.PageNo = page;
        await GetPage.InvokeAsync();
    }
    private async Task RowsChanged(ChangeEventArgs e)
    {
        Pagination.RowsCount = Convert.ToInt32(e.Value);
        await GetPage.InvokeAsync();
    }
}
