@page "/EInvoices"
@inject IGenericService<CustomersFilter, CustomerDto> customers

<Grid FormType=@typeof(EInvoice) TType=EInvoiceDto TFilter=EInvoicesFilter
                     MultiSelect=true TableDesignType=TableDesign.Table ActionsAsModal=false>
    <FilterTemplate Context="filter">
        <div class="flex-grow-1">
            <label>Type</label>
            <Options T=EInvoiceTypeEnum @bind-Value=filter.EInvoiceType DisplayName=@nameof(filter.EInvoiceType) ShowChoose=true />
        </div>
        <div class="flex-grow-1">
            <label>Customer</label>
            <Select AutoComplete="true" @bind-Value="filter.CustomerName" @bind-Key="filter.CustomerId"
                    List="customersList" GetList="GetCustomers" />
        </div>
        <div class="flex-grow-1">
            <label>Date From</label>
            <input type="datetime-local" class="form-control" @bind="filter.DateTimeIssuedFrom" />
        </div>
        <div class="flex-grow-1">
            <label>Date To</label>
            <input type="datetime-local" class="form-control" @bind="filter.DateTimeIssuedTo" />
        </div>
    </FilterTemplate>
</Grid>

@code {
    List<KeyValue>? customersList = new();

    private async Task GetCustomers(string? filter)
        => customersList = await customers.GetKeyValue(filter);
}
